/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package janela_pesquisar;

import classes.Cliente;
import classes.ContaPagar;
import classes.ContaReceber;
import classesDAO.ClienteDAO;
import classesDAO.ContaPagarDAO;
import classesDAO.ContaReceberDAO;
import janela_estatisticas.ExportarExcel;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableModel;

/**
 *
 * @author bruno
 */
public class JanelaPesquisarPrincipal extends javax.swing.JFrame {
 ContaReceber receber = new ContaReceber();
 ContaPagar pagar   = new ContaPagar();
    /**
     * Creates new form JanelaPesquisarPrincipal
     */
    public JanelaPesquisarPrincipal() {
        initComponents();      
        
        
       receber.todosRecebimentosTabela(this.r_tabela);
       pagar .todosPagamentosTabela(this.p_tabela);
       
       
       //---------------------
       
       //colocando os clientes no combo box
        ArrayList<Cliente>  clientesArray = ClienteDAO.retornarTodosClientes();
        
        this.r_cbCliente.addItem(" ");
        
        for( int i = 0; i < clientesArray.size(); i++ ){
             this.r_cbCliente.addItem(clientesArray.get(i).getNome());  
        }
    
       
       //-------------------
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        r_txtAno = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        r_txtData = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/##/####");
            this.r_txtData = new javax.swing.JFormattedTextField(data);
        }
        catch (Exception e){
        }
        r_cbDataExata = new javax.swing.JRadioButton();
        r_cbEntreMeses = new javax.swing.JRadioButton();
        r_cbMes = new javax.swing.JRadioButton();
        r_txtMesAte = new javax.swing.JComboBox<>();
        r_txtMes = new javax.swing.JComboBox<>();
        r_txtMesDe = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        r_cbStatus = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        r_cbCliente = new javax.swing.JComboBox<>();
        cbModoPagamento = new javax.swing.JComboBox<>();
        r_cbModoPagamento = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        r_tabela = new javax.swing.JTable();
        r_btnPesquisa = new javax.swing.JButton();
        r_btnLimpar = new javax.swing.JButton();
        jToolBar2 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        p_cbStatus = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        p_txtTitulo = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        p_txtAno = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        p_txtData = new javax.swing.JTextField();
        try{
            javax.swing.text.MaskFormatter data= new javax.swing.text.MaskFormatter("##/##/####");
            this.p_txtData = new javax.swing.JFormattedTextField(data);
        }
        catch (Exception e){
        }
        p_cbDataExata = new javax.swing.JRadioButton();
        p_cbEntreMeses = new javax.swing.JRadioButton();
        p_cbMes = new javax.swing.JRadioButton();
        p_txtMesDe = new javax.swing.JComboBox<>();
        p_txtMesAte = new javax.swing.JComboBox<>();
        p_txtMes = new javax.swing.JComboBox<>();
        p_btnLimpar = new javax.swing.JButton();
        p_btnPesquisa = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        p_tabela = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(null);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar Por Datas"));
        jPanel3.setLayout(null);

        jLabel3.setText("e");
        jLabel3.setToolTipText("");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel3.add(jLabel3);
        jLabel3.setBounds(320, 140, 20, 28);

        r_txtAno.setToolTipText("exemplo: 2017");
        jPanel3.add(r_txtAno);
        r_txtAno.setBounds(30, 50, 110, 30);

        jLabel6.setText("Ano: ");
        jPanel3.add(jLabel6);
        jLabel6.setBounds(30, 20, 120, 30);

        r_txtData.setToolTipText("Exemplo: 10/05/2017 ");
        r_txtData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_txtDataActionPerformed(evt);
            }
        });
        jPanel3.add(r_txtData);
        r_txtData.setBounds(230, 50, 130, 30);

        buttonGroup1.add(r_cbDataExata);
        r_cbDataExata.setText("Data Exata");
        r_cbDataExata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_cbDataExataActionPerformed(evt);
            }
        });
        jPanel3.add(r_cbDataExata);
        r_cbDataExata.setBounds(230, 20, 200, 30);

        buttonGroup1.add(r_cbEntreMeses);
        r_cbEntreMeses.setText("Entre Meses");
        r_cbEntreMeses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_cbEntreMesesActionPerformed(evt);
            }
        });
        jPanel3.add(r_cbEntreMeses);
        r_cbEntreMeses.setBounds(230, 110, 220, 30);

        buttonGroup1.add(r_cbMes);
        r_cbMes.setSelected(true);
        r_cbMes.setText("Mês");
        r_cbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_cbMesActionPerformed(evt);
            }
        });
        jPanel3.add(r_cbMes);
        r_cbMes.setBounds(30, 110, 120, 30);

        r_txtMesAte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez" }));
        jPanel3.add(r_txtMesAte);
        r_txtMesAte.setBounds(340, 140, 90, 30);

        r_txtMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez" }));
        jPanel3.add(r_txtMes);
        r_txtMes.setBounds(30, 140, 120, 30);

        r_txtMesDe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez" }));
        jPanel3.add(r_txtMesDe);
        r_txtMesDe.setBounds(220, 140, 90, 30);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(10, 50, 520, 210);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("filtros Adicionais"));
        jPanel4.setToolTipText("");
        jPanel4.setLayout(null);

        jLabel4.setText("Status:");
        jPanel4.add(jLabel4);
        jLabel4.setBounds(18, 29, 88, 28);

        r_cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Pendente", "Confirmado", "Cancelado", "Atrasado" }));
        jPanel4.add(r_cbStatus);
        r_cbStatus.setBounds(18, 63, 123, 27);

        jLabel5.setText("Cliente:");
        jPanel4.add(jLabel5);
        jLabel5.setBounds(18, 102, 63, 26);

        r_cbCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_cbClienteActionPerformed(evt);
            }
        });
        jPanel4.add(r_cbCliente);
        r_cbCliente.setBounds(18, 134, 123, 27);

        cbModoPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Debito Automatico", "Deposito", "Dinheiro", "Cartão", " ", " " }));
        jPanel4.add(cbModoPagamento);
        cbModoPagamento.setBounds(250, 250, 190, 30);

        r_cbModoPagamento.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Debito Automatico", "Deposito", "Dinheiro", "Cartão", " ", " " }));
        jPanel4.add(r_cbModoPagamento);
        r_cbModoPagamento.setBounds(170, 60, 190, 30);

        jLabel1.setText("Modo Pagamento: ");
        jPanel4.add(jLabel1);
        jLabel1.setBounds(170, 30, 180, 30);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(560, 50, 390, 210);

        r_tabela.setAutoCreateRowSorter(true);
        r_tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "código", "Cliente", "Valor", "Vencimento", "Parcelas", "modo pagamento", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(r_tabela);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(10, 320, 940, 270);

        r_btnPesquisa.setText("pesquisar");
        r_btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_btnPesquisaActionPerformed(evt);
            }
        });
        jPanel1.add(r_btnPesquisa);
        r_btnPesquisa.setBounds(10, 270, 130, 30);

        r_btnLimpar.setText("Resetar busca");
        r_btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r_btnLimparActionPerformed(evt);
            }
        });
        jPanel1.add(r_btnLimpar);
        r_btnLimpar.setBounds(160, 270, 130, 30);

        jToolBar2.setRollover(true);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/addNewFile32px.png"))); // NOI18N
        jButton2.setText("Exportar Excel");
        jButton2.setFocusable(false);
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButton2.setIconTextGap(8);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton2);

        jPanel1.add(jToolBar2);
        jToolBar2.setBounds(0, 0, 960, 40);

        jTabbedPane1.addTab("Pesquisar Recebimentos", jPanel1);

        jPanel2.setLayout(null);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("filtros Adicionais"));
        jPanel5.setToolTipText("");
        jPanel5.setLayout(null);

        jLabel7.setText("Status:");
        jPanel5.add(jLabel7);
        jLabel7.setBounds(18, 29, 88, 28);

        p_cbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Pendente", "Confirmado", "Cancelado", "Atrasado" }));
        jPanel5.add(p_cbStatus);
        p_cbStatus.setBounds(18, 63, 123, 27);

        jLabel8.setText("Titulo:");
        jPanel5.add(jLabel8);
        jLabel8.setBounds(18, 102, 63, 26);
        jPanel5.add(p_txtTitulo);
        p_txtTitulo.setBounds(20, 130, 120, 30);

        jPanel2.add(jPanel5);
        jPanel5.setBounds(560, 50, 390, 210);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar Por Datas"));
        jPanel6.setLayout(null);

        jLabel9.setText("e");
        jLabel9.setToolTipText("");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jPanel6.add(jLabel9);
        jLabel9.setBounds(320, 140, 20, 28);

        p_txtAno.setToolTipText("Exemplo: 2017");
        jPanel6.add(p_txtAno);
        p_txtAno.setBounds(30, 50, 110, 30);

        jLabel10.setText("Ano: ");
        jPanel6.add(jLabel10);
        jLabel10.setBounds(30, 20, 120, 30);

        p_txtData.setToolTipText("Exemplo: 17/08/2017");
        jPanel6.add(p_txtData);
        p_txtData.setBounds(230, 50, 130, 30);

        buttonGroup2.add(p_cbDataExata);
        p_cbDataExata.setText("Data Exata");
        p_cbDataExata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_cbDataExataActionPerformed(evt);
            }
        });
        jPanel6.add(p_cbDataExata);
        p_cbDataExata.setBounds(230, 20, 200, 30);

        buttonGroup2.add(p_cbEntreMeses);
        p_cbEntreMeses.setText("Entre Meses");
        p_cbEntreMeses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_cbEntreMesesActionPerformed(evt);
            }
        });
        jPanel6.add(p_cbEntreMeses);
        p_cbEntreMeses.setBounds(230, 110, 220, 30);

        buttonGroup2.add(p_cbMes);
        p_cbMes.setSelected(true);
        p_cbMes.setText("Mês");
        p_cbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_cbMesActionPerformed(evt);
            }
        });
        jPanel6.add(p_cbMes);
        p_cbMes.setBounds(30, 110, 120, 30);

        p_txtMesDe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez" }));
        jPanel6.add(p_txtMesDe);
        p_txtMesDe.setBounds(220, 140, 90, 30);

        p_txtMesAte.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez" }));
        jPanel6.add(p_txtMesAte);
        p_txtMesAte.setBounds(340, 140, 90, 30);

        p_txtMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez" }));
        jPanel6.add(p_txtMes);
        p_txtMes.setBounds(30, 140, 120, 30);

        jPanel2.add(jPanel6);
        jPanel6.setBounds(10, 50, 520, 210);

        p_btnLimpar.setText("Resetar Busca");
        p_btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_btnLimparActionPerformed(evt);
            }
        });
        jPanel2.add(p_btnLimpar);
        p_btnLimpar.setBounds(160, 270, 130, 30);

        p_btnPesquisa.setText("pesquisar");
        p_btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                p_btnPesquisaActionPerformed(evt);
            }
        });
        jPanel2.add(p_btnPesquisa);
        p_btnPesquisa.setBounds(10, 270, 130, 30);

        p_tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "código", "Título", "Valor", "Vencimento", "Parcelas", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Object.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        p_tabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(p_tabela);

        jPanel2.add(jScrollPane4);
        jScrollPane4.setBounds(10, 320, 940, 280);

        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/addNewFile32px.png"))); // NOI18N
        jButton1.setText("Exportar Excel");
        jButton1.setFocusable(false);
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButton1.setIconTextGap(8);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jPanel2.add(jToolBar1);
        jToolBar1.setBounds(0, 0, 960, 40);

        jTabbedPane1.addTab("pesquisar Pagamentos", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        setSize(new java.awt.Dimension(976, 665));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void r_btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_btnPesquisaActionPerformed
        
        
      ArrayList<ContaReceber> contasArray = new ArrayList<>(); 
        try {
           contasArray  = ContaReceberDAO.pesquisaAvancada( this.montarWhereRecebimento() );
           receber.makeTable(this.r_tabela,  contasArray);           
                    
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,  "Preencha os campos corretamente!");
        }
         
    }//GEN-LAST:event_r_btnPesquisaActionPerformed

    private void r_cbDataExataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_cbDataExataActionPerformed
        //habilitando campos necessários
        this.r_txtData.setEnabled(true);
        //desabilitando outros campos
        this.r_txtMesDe.setEnabled(false);
        this.r_txtMes.setEnabled(false);
        this.r_txtMesAte.setEnabled(false);
        this.r_txtAno.setEnabled(false);
    }//GEN-LAST:event_r_cbDataExataActionPerformed

    private void r_cbEntreMesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_cbEntreMesesActionPerformed
        //habilitando campos necessários
        this.r_txtMesDe.setEnabled(true);
        this.r_txtMesAte.setEnabled(true);
        this.r_txtAno.setEnabled(true);
        //desabilitando outros campos
        this.r_txtData.setEnabled(false);
        this.r_txtMes.setEnabled(false);
        
    }//GEN-LAST:event_r_cbEntreMesesActionPerformed

    private void r_cbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_cbMesActionPerformed
        //habilitando campos necessários
        this.r_txtMes.setEnabled(true);
        this.r_txtAno.setEnabled(true);        
        //desabilitando outros campos
        this.r_txtData.setEnabled(false); 
        this.r_txtMesDe.setEnabled(false);
        this.r_txtMesAte.setEnabled(false);
        
    }//GEN-LAST:event_r_cbMesActionPerformed

    private void r_btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_btnLimparActionPerformed
        //resetando tabela e limpando campos
        
        receber.todosRecebimentosTabela(this.r_tabela);
        
        this.r_txtAno.setText("");
        this.r_txtData.setText("");
        
        this.r_txtMes.setSelectedIndex(0);
        this.r_txtMesDe.setSelectedIndex(0);
        this.r_txtMesAte.setSelectedIndex(0);
        
        this.r_cbModoPagamento.setSelectedIndex(0);
        this.r_cbCliente.setSelectedIndex(0);
        this.r_cbStatus.setSelectedIndex(0);
        
        
    }//GEN-LAST:event_r_btnLimparActionPerformed

    private void p_cbDataExataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_cbDataExataActionPerformed
        //habilitando campos necessários
        this.p_txtData.setEnabled(true);
        //desabilitando outros campos
        this.p_txtMesDe.setEnabled(false);
        this.p_txtMesDe.setEnabled(false);
        this.p_txtMesAte.setEnabled(false);
        this.p_txtAno.setEnabled(false);
    }//GEN-LAST:event_p_cbDataExataActionPerformed

    private void p_cbEntreMesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_cbEntreMesesActionPerformed
         //habilitando campos necessários
        this.p_txtMesDe.setEnabled(true);
        this.p_txtMesAte.setEnabled(true);
        this.p_txtAno.setEnabled(true);
        //desabilitando outros campos
        this.p_txtData.setEnabled(false);
        this.p_txtMes.setEnabled(false);
    }//GEN-LAST:event_p_cbEntreMesesActionPerformed

    private void p_cbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_cbMesActionPerformed
        //habilitando campos necessários
        this.p_txtMes.setEnabled(true);
        this.p_txtAno.setEnabled(true);
        
        //desabilitando outros campos
        this.p_txtData.setEnabled(false); 
        this.p_txtMesDe.setEnabled(false);
        this.p_txtMesAte.setEnabled(false);
    }//GEN-LAST:event_p_cbMesActionPerformed

    private void p_btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_btnLimparActionPerformed
        pagar .todosPagamentosTabela(this.p_tabela);
    }//GEN-LAST:event_p_btnLimparActionPerformed

    private void p_btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_p_btnPesquisaActionPerformed
        ArrayList<ContaPagar> pagarArray = new ArrayList<>();         
        try {
           pagarArray  = ContaPagarDAO.pesquisaAvancada( this.montarWherePagamento() );
           pagar.makeTable(this.p_tabela,  pagarArray);           
                    
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,  "Preencha os campos corretamente!");
        }
    }//GEN-LAST:event_p_btnPesquisaActionPerformed

    private void r_cbClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_cbClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_cbClienteActionPerformed

    private void r_txtDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r_txtDataActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_r_txtDataActionPerformed
    
    //EXPORTAR EXCEL Pagar
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));        
        String absolutePath="";
        
        if( fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION ) {
            absolutePath = fileChooser.getCurrentDirectory().getAbsolutePath()+"\\"+fileChooser.getSelectedFile().getName()+".xls";
        }
            
            File file = new File(absolutePath);
            FileWriter out=null;
            try {
                TableModel model = this.p_tabela.getModel();
                out = new FileWriter(file);
                for(int i=0; i < model.getColumnCount(); i++) {
                    out.write(model.getColumnName(i) + "\t");
                }
                out.write("\n");

                for(int i=0; i< model.getRowCount(); i++) {
                    for(int j=0; j < model.getColumnCount(); j++) {
                        out.write(model.getValueAt(i,j).toString()+"\t");
                    }
                    out.write("\n");
            }
                JOptionPane.showMessageDialog(null, "Documento gerado com sucesso!");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Falha ao gerar documento!");
                Logger.getLogger(ExportarExcel.class.getName()).log(Level.SEVERE, null, ex);
            }


            try {
                out.close();
            } catch (IOException ex) {                
                Logger.getLogger(ExportarExcel.class.getName()).log(Level.SEVERE, null, ex);
            }        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    //exportar Excel receber
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));        
        String absolutePath="";
        
        if( fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION ) {
            absolutePath = fileChooser.getCurrentDirectory().getAbsolutePath()+"\\"+fileChooser.getSelectedFile().getName()+".xls";
        }
            
            File file = new File(absolutePath);
            FileWriter out=null;
            try {
                TableModel model = this.r_tabela.getModel();
                out = new FileWriter(file);
                for(int i=0; i < model.getColumnCount(); i++) {
                    out.write(model.getColumnName(i) + "\t");
                }
                out.write("\n");

                for(int i=0; i< model.getRowCount(); i++) {
                    for(int j=0; j < model.getColumnCount(); j++) {
                        out.write(model.getValueAt(i,j).toString()+"\t");
                    }
                    out.write("\n");
            }
                JOptionPane.showMessageDialog(null, "Documento gerado com sucesso!");
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Falha ao gerar documento!");
                Logger.getLogger(ExportarExcel.class.getName()).log(Level.SEVERE, null, ex);
            }


            try {
                out.close();
            } catch (IOException ex) {                
                Logger.getLogger(ExportarExcel.class.getName()).log(Level.SEVERE, null, ex);
            } 
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaPesquisarPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaPesquisarPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaPesquisarPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaPesquisarPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaPesquisarPrincipal().setVisible(true);
            }
        });
    }
    
    
//  -----------------WHERE RECEBER
   public String montarWhereRecebimento(){            
       //pegando os campos
        String ano = this.r_txtAno.getText();
        int mes = this.r_txtMes.getSelectedIndex();
        int mesDe = this.r_txtMesDe.getSelectedIndex();
        int mesAte = this.r_txtMesAte.getSelectedIndex();
        String  dataExata = this.r_txtData.getText();
         String modoPag = this.r_cbModoPagamento.getItemAt( this.r_cbModoPagamento.getSelectedIndex() );
        
        
        String where = null;
        //montando where Data Exata
        // montando where Data Exata
        if(this.r_txtData.isEnabled() && !dataExata.isEmpty()){
          //  JOptionPane.showMessageDialog(null , dataExata);
            where =  " r.data_vencimento = '" + dataExata+ "'";
        }
        
        
        
        //where Mes
        if(this.r_cbMes.isSelected()){            
            if(ano.isEmpty()  && mes != 0){
              if(mes <= 9){
                  where =  " r.data_vencimento LIKE '___0" + mes + "_____'";
              } else {
                  where =  " r.data_vencimento LIKE '___" + mes + "_____'";
              }
            }            
            else if(!ano.isEmpty() && mes != 0) {
               if(mes <= 9){
                   where =  " r.data_vencimento LIKE '___0" + mes + "_" + ano + "' ";
               } else {
                   where =  " r.data_vencimento LIKE '___" + mes + "_" + ano + "' ";
               }
            }   
            else if(!ano.isEmpty() && mes != 0){
                    where =  " r.data_vencimento LIKE '%" + ano + "' ";
                
            }  
        }
        
        //-----where entre meses
        if(this.r_cbEntreMeses.isSelected()){
            if(mesDe == 0 || mesAte == 0 ){
                JOptionPane.showMessageDialog(null, "Preencha os dois campos de meses \n para utilizar essa opção");
               // JOptionPane.showMessageDialog(null, mesDe);
               // JOptionPane.showMessageDialog(null, mesAte);
                return null;
            }                
                
            String mesAtual;
            where = "( ";
            for(int i = mesDe; i <= mesAte; i++){
                if(i >= 10) mesAtual = i+""; 
                else mesAtual = "0" + i;
                                
                if(i == mesDe) where +=  " r.data_vencimento LIKE '___" + mesAtual + "_____'";
                else {
                    where +=  " OR r.data_vencimento LIKE '___" +  mesAtual + "_____'";
                }
            }
           
           where += ")";
           
        }
        
        //adicionando filtros extras
        if(this.r_cbStatus.getSelectedIndex()  >  0){
            if(where != null)
                where += " AND r.status = '" + this.r_cbStatus.getItemAt(this.r_cbStatus.getSelectedIndex()) + "' ";
            else
                where = " r.status = '"  +  this.r_cbStatus.getItemAt(this.r_cbStatus.getSelectedIndex()) + "' ";
        }
        
        if(this.r_cbCliente.getSelectedIndex() >  0) {
            if(where != null)
                where += " AND c.nome = '" + this.r_cbCliente.getItemAt( this.r_cbCliente.getSelectedIndex() ) + "' ";
            else
                where = " c.nome= '"  +  this.r_cbCliente.getItemAt(this.r_cbCliente.getSelectedIndex()) + "' ";
        }
        
        if(this.r_cbModoPagamento.getSelectedIndex() >  0){           
            if(where != null)
                where += " AND r.modo_pagamento = '" + modoPag + "' ";
            else
                where = "r.modo_pagamento = '" + modoPag + "' ";                        
        }
              
       return where;
   }

   
   //------------WHERE PAGAR
   public String montarWherePagamento(){       
       // pegando os campos
        String ano = this.p_txtAno.getText();
       int mes = this.p_txtMes.getSelectedIndex();
        int mesDe = this.p_txtMesDe.getSelectedIndex();
        int mesAte = this.p_txtMesAte.getSelectedIndex();
        String  dataExata = this.p_txtData.getText();
        String titulo = this.p_txtTitulo.getText();
        
        String where = null;
        // montando where Data Exata
        if(this.p_txtData.isEnabled() && !dataExata.isEmpty()){
          //  JOptionPane.showMessageDialog(null , dataExata);
            where =  " p.data_vencimento = '" + dataExata+ "'";
        }
        
        // where Mes                 
            if(this.p_cbMes.isSelected()){            
            if(ano.isEmpty()  && mes != 0){
              if(mes <= 9){
                  where =  " p.data_vencimento LIKE '___0" + mes + "_____'";
              } else {
                  where =  " p.data_vencimento LIKE '___" + mes + "_____'";
              }
            }            
            else if(!ano.isEmpty() && mes != 0) {
               if(mes <= 9){
                   where =  " p.data_vencimento LIKE '___0" + mes + "_" + ano + "' ";
               } else {
                   where =  " p.data_vencimento LIKE '___" + mes + "_" + ano + "' ";
               }
            }   
            else if(!ano.isEmpty() && mes != 0){
                    where =  " p.data_vencimento LIKE '%" + ano + "' ";
                
            }  
        }
        
        //-----where entre meses
        if(this.p_cbEntreMeses.isSelected()){
            if(mesDe == 0  || mesAte == 0){
                JOptionPane.showMessageDialog(null, "Selecione um mes nos dois campos  \n  para utilizar essa opção");
                return null;
            }
            
           String mesAtual;
            where = "( ";
            for(int i = mesDe; i <= mesAte; i++){
                if(i >= 10) mesAtual = i+""; 
                else mesAtual = "0" + i;
                                
                if(i == mesDe) where +=  " p.data_vencimento LIKE '___" + mesAtual + "_____'";
                else {
                    where +=  " OR p.data_vencimento LIKE '___" +  mesAtual + "_____'";
                }
            }
           
           where += ")";
        }
        
        //adicionando filtros extras
        if(this.p_cbStatus.getSelectedIndex()  >  0){
            if(where != null)
                where += " AND p.status = '" + this.p_cbStatus.getItemAt(this.p_cbStatus.getSelectedIndex()) + "' ";
            else
                where = " p.status = '"  +  this.p_cbStatus.getItemAt(this.p_cbStatus.getSelectedIndex()) + "' ";
        }
        
        if( !titulo.isEmpty() ) {
            if(where != null)
                where += " AND p.titulo = '" +  titulo + "' " ;
            else
                where = "p.titulo = '" +  titulo + "' " ;
        }       
        return where;   
   }
   
   
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> cbModoPagamento;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JButton p_btnLimpar;
    private javax.swing.JButton p_btnPesquisa;
    private javax.swing.JRadioButton p_cbDataExata;
    private javax.swing.JRadioButton p_cbEntreMeses;
    private javax.swing.JRadioButton p_cbMes;
    private javax.swing.JComboBox<String> p_cbStatus;
    private javax.swing.JTable p_tabela;
    private javax.swing.JTextField p_txtAno;
    private javax.swing.JTextField p_txtData;
    private javax.swing.JComboBox<String> p_txtMes;
    private javax.swing.JComboBox<String> p_txtMesAte;
    private javax.swing.JComboBox<String> p_txtMesDe;
    private javax.swing.JTextField p_txtTitulo;
    private javax.swing.JButton r_btnLimpar;
    private javax.swing.JButton r_btnPesquisa;
    private javax.swing.JComboBox<String> r_cbCliente;
    private javax.swing.JRadioButton r_cbDataExata;
    private javax.swing.JRadioButton r_cbEntreMeses;
    private javax.swing.JRadioButton r_cbMes;
    private javax.swing.JComboBox<String> r_cbModoPagamento;
    private javax.swing.JComboBox<String> r_cbStatus;
    private javax.swing.JTable r_tabela;
    private javax.swing.JTextField r_txtAno;
    private javax.swing.JTextField r_txtData;
    private javax.swing.JComboBox<String> r_txtMes;
    private javax.swing.JComboBox<String> r_txtMesAte;
    private javax.swing.JComboBox<String> r_txtMesDe;
    // End of variables declaration//GEN-END:variables
}