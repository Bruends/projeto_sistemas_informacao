/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package janela_estatisticas;

import classes.AnoContaPagar;
import classes.ContaPagar;
import classes.GraficoDeBarra;
import classes.GraficoDeLinha;
import classes.MesContaPagar;
import classes.PercentualCrescimentoAno;
import classes.PercentualCrescimentoMes;
import classesDAO.ContaPagarDAO;
import com.lowagie.text.pdf.PdfWriter;
import com.lowagie.text.Paragraph;
import com.lowagie.text.Document;
import com.lowagie.text.DocumentException;
import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.FileOutputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingWorker;
import javax.swing.event.DocumentListener;
import javax.swing.event.UndoableEditListener;
import javax.swing.table.TableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.Element;
import javax.swing.text.Position;
import javax.swing.text.Segment;


/**
 *
 * @author Lusca
 */
public class JanelaDeEstatisticas extends javax.swing.JFrame {
     ArrayList<Integer> anosCmb = new ArrayList<>();
     ArrayList<Integer> mesesCmb = new ArrayList<>();
     ArrayList<MesContaPagar> mesesIntervalo = new ArrayList<>();
     ArrayList<MesContaPagar> mesesIntervaloGrafico = new ArrayList<>();
     ArrayList<MesContaPagar> mesesContaPagarGrafico = new ArrayList<>();
     ArrayList<AnoContaPagar> anosContaPagargraf = new ArrayList<>();
     ArrayList<PercentualCrescimentoMes> percentuais = new ArrayList<>();
     ArrayList<PercentualCrescimentoAno> percentuaisAno = new ArrayList<>();            
     
     MesContaPagar janeiro = new MesContaPagar();
     MesContaPagar fevereiro = new MesContaPagar();
     MesContaPagar marco = new MesContaPagar();
     MesContaPagar abril = new MesContaPagar();
     MesContaPagar maio = new MesContaPagar();
     MesContaPagar junho = new MesContaPagar();
     MesContaPagar julho = new MesContaPagar();
     MesContaPagar agosto = new MesContaPagar();
     MesContaPagar setembro = new MesContaPagar();
     MesContaPagar outubro = new MesContaPagar();
     MesContaPagar novembro = new MesContaPagar();
     MesContaPagar dezembro = new MesContaPagar();
     private int contador = 0;
     
     /**
     * Creates new form JanelaDeEstatisticas
     */
    public JanelaDeEstatisticas() {        
        initComponents();        
        jTabbedPane2.setVisible(false);
        btnExportar.setVisible(false);
        this.setExtendedState(MAXIMIZED_BOTH);
        this.pnlGrafico1.setLayout( new BorderLayout() );
        this.pnlGrafico2.setLayout( new BorderLayout() );
        cmbAnoMes.setEnabled(true);
        cmbDeAnual.setEnabled(false);
        cmbAteAnual.setEnabled(false);
        lblAnoMes.setEnabled(true);
        
        carregaComboAno(this.cmbAnoMes);
        carregaComboAno(this.cmbDeAnual);
        carregaComboAno(this.cmbAteAnual);
        
    }

    
    
    private void carregaComboAno(JComboBox cmbAno){
        DefaultComboBoxModel cmbModelo = (DefaultComboBoxModel) cmbAno.getModel();
        for (int i = 0; i < ContaPagarDAO.retornaTodosAnos().size(); i++) {            
            cmbModelo.addElement(ContaPagarDAO.retornaTodosAnos().get(i));            
        }
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupIntervalo = new javax.swing.ButtonGroup();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jSplitPane1 = new javax.swing.JSplitPane();
        pnlGrafico1 = new javax.swing.JPanel();
        pnlGrafico2 = new javax.swing.JPanel();
        lblCrescimento = new javax.swing.JLabel();
        jToolBar2 = new javax.swing.JToolBar();
        lblAnoMes = new javax.swing.JLabel();
        rbMes = new javax.swing.JRadioButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        jLabel4 = new javax.swing.JLabel();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        cmbDeMes = new javax.swing.JComboBox<>();
        filler14 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        jLabel5 = new javax.swing.JLabel();
        filler15 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        cmbAteMes = new javax.swing.JComboBox<>();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(25, 0), new java.awt.Dimension(25, 0), new java.awt.Dimension(25, 32767));
        cmbAnoMes = new javax.swing.JComboBox<>();
        rbAno = new javax.swing.JRadioButton();
        filler5 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        lblDeAno = new javax.swing.JLabel();
        filler6 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        cmbDeAnual = new javax.swing.JComboBox<>();
        filler7 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        lblAteAno = new javax.swing.JLabel();
        filler8 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        cmbAteAnual = new javax.swing.JComboBox<>();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(25, 0), new java.awt.Dimension(25, 0), new java.awt.Dimension(25, 32767));
        btnGerarGrafico = new javax.swing.JButton();
        filler9 = new javax.swing.Box.Filler(new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 0), new java.awt.Dimension(10, 32767));
        btnCres = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jMenu1.setText("File");
        jMenuBar2.add(jMenu1);

        jMenu3.setText("Edit");
        jMenuBar2.add(jMenu3);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/finances (1).png"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(460, 10, 64, 64);

        jLabel2.setBackground(new java.awt.Color(102, 255, 102));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("ESTAT√çSTICAS");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(530, 30, 177, 29);

        jTabbedPane2.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane2.setForeground(new java.awt.Color(0, 153, 153));

        jSplitPane1.setBackground(new java.awt.Color(0, 102, 102));
        jSplitPane1.setDividerLocation(500);
        jSplitPane1.setDividerSize(50);
        jSplitPane1.setForeground(new java.awt.Color(255, 255, 255));
        jSplitPane1.setResizeWeight(1.0);
        jSplitPane1.setPreferredSize(new java.awt.Dimension(200, 522));

        pnlGrafico1.setBackground(new java.awt.Color(229, 229, 229));

        javax.swing.GroupLayout pnlGrafico1Layout = new javax.swing.GroupLayout(pnlGrafico1);
        pnlGrafico1.setLayout(pnlGrafico1Layout);
        pnlGrafico1Layout.setHorizontalGroup(
            pnlGrafico1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 499, Short.MAX_VALUE)
        );
        pnlGrafico1Layout.setVerticalGroup(
            pnlGrafico1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 478, Short.MAX_VALUE)
        );

        jSplitPane1.setLeftComponent(pnlGrafico1);

        pnlGrafico2.setBackground(new java.awt.Color(229, 229, 229));

        lblCrescimento.setForeground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout pnlGrafico2Layout = new javax.swing.GroupLayout(pnlGrafico2);
        pnlGrafico2.setLayout(pnlGrafico2Layout);
        pnlGrafico2Layout.setHorizontalGroup(
            pnlGrafico2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGrafico2Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(lblCrescimento, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );
        pnlGrafico2Layout.setVerticalGroup(
            pnlGrafico2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlGrafico2Layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(lblCrescimento, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(299, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(pnlGrafico2);

        jTabbedPane2.addTab("Contas a pagar", new javax.swing.ImageIcon(getClass().getResource("/imgs/cash16px.png")), jSplitPane1); // NOI18N

        getContentPane().add(jTabbedPane2);
        jTabbedPane2.setBounds(80, 160, 1100, 510);

        jToolBar2.setBackground(new java.awt.Color(229, 229, 229));
        jToolBar2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gerar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11), new java.awt.Color(153, 153, 153))); // NOI18N
        jToolBar2.setFloatable(false);
        jToolBar2.setRollover(true);

        lblAnoMes.setText("Meses:");
        lblAnoMes.setEnabled(false);
        jToolBar2.add(lblAnoMes);

        rbMes.setBackground(new java.awt.Color(229, 229, 229));
        btnGroupIntervalo.add(rbMes);
        rbMes.setSelected(true);
        rbMes.setText("Meses");
        rbMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMesActionPerformed(evt);
            }
        });
        jToolBar2.add(rbMes);
        jToolBar2.add(filler3);

        jLabel4.setText("De:");
        jToolBar2.add(jLabel4);
        jToolBar2.add(filler4);

        cmbDeMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Janeiro", "Fevereiro", "Mar√ßo", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        cmbDeMes.setMaximumSize(new java.awt.Dimension(300, 20));
        cmbDeMes.setMinimumSize(new java.awt.Dimension(28, 20));
        jToolBar2.add(cmbDeMes);
        jToolBar2.add(filler14);

        jLabel5.setText("At√©:");
        jToolBar2.add(jLabel5);
        jToolBar2.add(filler15);

        cmbAteMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Janeiro", "Fevereiro", "Mar√ßo", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        cmbAteMes.setMaximumSize(new java.awt.Dimension(300, 20));
        cmbAteMes.setMinimumSize(new java.awt.Dimension(28, 20));
        jToolBar2.add(cmbAteMes);
        jToolBar2.add(filler2);

        cmbAnoMes.setMaximumSize(new java.awt.Dimension(300, 20));
        jToolBar2.add(cmbAnoMes);

        rbAno.setBackground(new java.awt.Color(229, 229, 229));
        btnGroupIntervalo.add(rbAno);
        rbAno.setText("Anos");
        rbAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAnoActionPerformed(evt);
            }
        });
        jToolBar2.add(rbAno);
        jToolBar2.add(filler5);

        lblDeAno.setText("De:");
        lblDeAno.setEnabled(false);
        jToolBar2.add(lblDeAno);
        jToolBar2.add(filler6);

        cmbDeAnual.setEnabled(false);
        cmbDeAnual.setMaximumSize(new java.awt.Dimension(300, 20));
        jToolBar2.add(cmbDeAnual);
        jToolBar2.add(filler7);

        lblAteAno.setText("At√©:");
        lblAteAno.setEnabled(false);
        jToolBar2.add(lblAteAno);
        jToolBar2.add(filler8);

        cmbAteAnual.setEnabled(false);
        cmbAteAnual.setMaximumSize(new java.awt.Dimension(300, 20));
        cmbAteAnual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAteAnualActionPerformed(evt);
            }
        });
        jToolBar2.add(cmbAteAnual);
        jToolBar2.add(filler1);

        btnGerarGrafico.setBackground(new java.awt.Color(229, 229, 229));
        btnGerarGrafico.setForeground(new java.awt.Color(51, 102, 255));
        btnGerarGrafico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/graph (2).png"))); // NOI18N
        btnGerarGrafico.setText("Gr√°fico de gastos");
        btnGerarGrafico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarGraficoActionPerformed(evt);
            }
        });
        jToolBar2.add(btnGerarGrafico);
        jToolBar2.add(filler9);

        btnCres.setBackground(new java.awt.Color(229, 229, 229));
        btnCres.setForeground(new java.awt.Color(0, 204, 51));
        btnCres.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/icon (8).png"))); // NOI18N
        btnCres.setText("Gr√°fico de crescimento");
        btnCres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCresActionPerformed(evt);
            }
        });
        jToolBar2.add(btnCres);

        getContentPane().add(jToolBar2);
        jToolBar2.setBounds(150, 90, 970, 60);

        btnExportar.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnExportar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imgs/export24px.png"))); // NOI18N
        btnExportar.setIconTextGap(0);
        btnExportar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExportar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnExportarMouseClicked(evt);
            }
        });
        getContentPane().add(btnExportar);
        btnExportar.setBounds(1180, 180, 30, 40);

        jMenu2.setText("Sobre");

        jMenuItem1.setText("Ajuda");
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        setSize(new java.awt.Dimension(1275, 807));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCresActionPerformed
        // btn crescimento
        jTabbedPane2.setVisible(true);
        btnExportar.setVisible(true);
        if( rbAno.isSelected() ){
            ArrayList<AnoContaPagar> anosContaPagar = new ArrayList<>();
            
            for (int i = 0; i < anosCmb.size(); i++) {
                anosContaPagar.add( ContaPagarDAO.retornaAno( anosCmb.get(i).toString() ) );
            }

            for (int i = 0; i < anosCmb.size(); i++) {
                if( i+1 < anosCmb.size()){
                    double valorFinal = anosContaPagar.get(i+1).getSomaValores();
                    double valorInicial = anosContaPagar.get(i).getSomaValores();
                    int anoInicial=Integer.parseInt( anosContaPagar.get(i).getAno() );
                    int anoFinal=Integer.parseInt( anosContaPagar.get(i+1).getAno() );
                    double numAnos = 2;
                    double resultado =  (Math.pow((valorFinal/valorInicial), (1/numAnos))-1)*100 ;
                    PercentualCrescimentoAno percentual = new PercentualCrescimentoAno((anosCmb.get(i)+" a " +anosCmb.get(i+1)), resultado);
                    percentuaisAno.add(percentual);
                }
            }
            GraficoDeLinha graficoDeLinha = new GraficoDeLinha();
            this.pnlGrafico2.removeAll();
            this.pnlGrafico2.add( graficoDeLinha.criarGraficoCrescimentoAnual(percentuaisAno));
            this.pnlGrafico2.revalidate();
            this.pnlGrafico2.repaint();
        }else if( rbMes.isSelected() ){            
            percentuais.clear();
                        
            for (int i = 0; i < mesesIntervalo.size(); i++) {                
                if( i+1 < mesesIntervalo.size() ){
                    double valorFinal = mesesIntervalo.get(i+1).getContaPagar().getValor();
                    double valorInicial = mesesIntervalo.get(i).getContaPagar().getValor();
                    double resultado = ((valorFinal-valorInicial)/valorInicial)*100;
                    PercentualCrescimentoMes percentual = new PercentualCrescimentoMes( (mesesIntervalo.get(i).getNome() + " a " + mesesIntervalo.get(i+1).getNome() ) , resultado);
                    percentuais.add(percentual);
                }
            }
            GraficoDeLinha graficoDeLinha = new GraficoDeLinha();
            this.pnlGrafico2.removeAll();
            //this.pnlGrafico2.add( graficoDeLinha.criarGraficoCrescimentoPorMes(percentuais));
            this.pnlGrafico2.add( graficoDeLinha.criarGraficoCrescimentoPorMes(percentuais) );
            this.pnlGrafico2.revalidate();
            this.pnlGrafico2.repaint();
        }
        
    }//GEN-LAST:event_btnCresActionPerformed

    private void btnGerarGraficoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarGraficoActionPerformed
        // Btn gerar grafico
        jTabbedPane2.setVisible(true);
        btnExportar.setVisible(true);
        anosCmb.clear();
        mesesCmb.clear();
        contador++;
        
        if( contador > 1 ){
            janeiro = null;
            fevereiro = null;
            marco = null;
            abril = null;
            maio = null;
            junho = null;
            julho = null;
            agosto = null;
            setembro = null;
            outubro = null;
            novembro = null;
            dezembro = null;
        }
                
        mesesContaPagarGrafico.clear();        
        ArrayList<AnoContaPagar> anos=null;

        if( rbMes.isSelected() ){
            mesesIntervalo.clear();
            int mesDe = 0;
            int mesAte = 0;
            GraficoDeBarra graficoDeBarra = new GraficoDeBarra();
            ArrayList<MesContaPagar> mesesContaPagar = new ArrayList<>();
            mesesContaPagar = ContaPagarDAO.retornaMeses( cmbAnoMes.getItemAt( cmbAnoMes.getSelectedIndex() ) );
            ArrayList<MesContaPagar> mesesContaPagar2 = new ArrayList<>();
            ArrayList<String> meses = new ArrayList<>();
            meses.add("Janeiro");
            meses.add("Fevereiro");
            meses.add("Mar√ßo");
            meses.add("Abril");
            meses.add("Maio");
            meses.add("junho");
            meses.add("Julho");
            meses.add("Agosto");
            meses.add("Setembro");
            meses.add("Outubro");
            meses.add("Novembro");
            meses.add("Dezembro");
            ArrayList<Integer> posicoes = new ArrayList<>();
            for (int i = 0; i < mesesContaPagar.size(); i++) {
                for (int j = 0; j < meses.size(); j++) {
                    //index out of bounds \/
                    if( !mesesContaPagar.get(i).getNome().equals( meses.get(j) ) ){                
                        posicoes.add( i );
                    }
                }
            }
            
            for (int i = posicoes.size()-1; i >= 0; i--) {
                meses.remove(posicoes.get(i));
            }
            
            for (int i = 0; i < meses.size(); i++) {
                try {
                    mesesContaPagar2.add( ContaPagarDAO.retornaMesesUnique(cmbAnoMes.getItemAt( cmbAnoMes.getSelectedIndex() ),meses.get(i)) );
                } catch (SQLException ex) {
                    Logger.getLogger(JanelaDeEstatisticas.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            String mesDeCmb = cmbDeMes.getItemAt( cmbDeMes.getSelectedIndex() );
            String mesAteCmb = cmbAteMes.getItemAt( cmbAteMes.getSelectedIndex() );    
            ArrayList<String> nomeMeses = new ArrayList<>();
            switch(mesDeCmb){
                    case "Janeiro": mesDe = 1;
                        break;
                    case "Fevereiro": mesDe = 2; 
                        break;
                    case "Mar√ßo": mesDe = 3;
                        break;
                    case "Abril": mesDe = 4;
                        break;
                    case "Maio": mesDe = 5;
                        break;
                    case "Junho": mesDe = 6;
                        break;
                    case "Julho": mesDe = 7;
                        break;
                    case "Agosto": mesDe = 8;
                        break;
                    case "Setembro": mesDe = 9; 
                        break;
                    case "Outubro": mesDe = 10;
                        break;
                    case "Novembro": mesDe = 11;
                        break;
                    case "Dezembro": mesDe = 12;
                        break;                            
                }
            
                switch(mesAteCmb){
                    case "Janeiro": mesAte = 1;
                        break;
                    case "Fevereiro": mesAte = 2; 
                        break;
                    case "Mar√ßo": mesAte = 3;
                        break;
                    case "Abril": mesAte = 4;
                        break;
                    case "Maio": mesAte = 5;
                        break;
                    case "Junho": mesAte = 6;
                        break;
                    case "Julho": mesAte = 7;
                        break;
                    case "Agosto": mesAte = 8;
                        break;
                    case "Setembro": mesAte = 9; 
                        break;
                    case "Outubro": mesAte = 10;
                        break;
                    case "Novembro": mesAte = 11;
                        break;
                    case "Dezembro": mesAte = 12;
                        break;                            
                }
                
                while( mesDe <= mesAte ){                  
                    String mesAtual="";
                    switch(mesDe){
                    case 1: mesAtual = "Janeiro";
                        break;
                    case 2: mesAtual = "Fevereiro";
                        break;
                    case 3: mesAtual = "Mar√ßo";
                        break;
                    case 4: mesAtual = "Abril";
                        break;
                    case 5: mesAtual = "Maio";
                        break;
                    case 6: mesAtual = "Junho";
                        break;
                    case 7: mesAtual = "Julho";
                        break;
                    case 8: mesAtual = "Agosto";
                        break;
                    case 9: mesAtual = "Setembro";
                        break;
                    case 10: mesAtual = "Outubro";
                        break;
                    case 11: mesAtual = "Novembro";
                        break;
                    case 12: mesAtual = "Dezembro";
                        break;                            
                }                        
                nomeMeses.add(mesAtual);                    
                mesDe++;                    
                }
                                   
                for (int i = 0; i < mesesContaPagar2.size(); i++) { 
                    if( nomeMeses.contains( mesesContaPagar2.get(i).getNome() ) ){                        
                        mesesIntervalo.add( mesesContaPagar2.get(i) );                          
                    }                                            
                }
                 
               
                                            
            this.pnlGrafico1.removeAll();
            //this.pnlGrafico1.add( graficoDeBarra.criarGrafico( mesesIntervalo ));
            this.pnlGrafico1.add( graficoDeBarra.criarGrafico( mesesIntervalo ));
            this.pnlGrafico1.revalidate();
            this.pnlGrafico1.repaint();

        }else if( rbAno.isSelected() ){
            int deAno = cmbDeAnual.getSelectedIndex();
            int ateAno = cmbAteAnual.getSelectedIndex();
            if( deAno == ateAno ){
                anos = ContaPagarDAO.retornaAnos(cmbDeAnual.getItemAt( cmbDeAnual.getSelectedIndex() ));

                GraficoDeBarra graficoDeBarra = new GraficoDeBarra();
                this.pnlGrafico1.removeAll();
                this.pnlGrafico1.add( graficoDeBarra.criarGraficoAnual(anos ) );
                this.pnlGrafico1.revalidate();
                this.pnlGrafico1.repaint();
            }else if( Integer.parseInt( cmbDeAnual.getItemAt( cmbDeAnual.getSelectedIndex() ) ) < Integer.parseInt( cmbAteAnual.getItemAt( cmbAteAnual.getSelectedIndex() ) )){
                ArrayList<AnoContaPagar> anosContaPagar=null;
                int anoDeNome = Integer.parseInt( cmbDeAnual.getItemAt( cmbDeAnual.getSelectedIndex() ) );
                String anoAteNome =  cmbAteAnual.getItemAt( cmbAteAnual.getSelectedIndex() ) ;

                int anoAte = Integer.parseInt(anoAteNome);

                //String[] anosCmb = new String[cmbAteAnual.getItemCount()];
                for (int i = 0; i < cmbAteAnual.getItemCount(); i++) {
                    //int teste= Integer.parseInt(cmbAteAnual.getItemAt( i ));
                    if( (Integer.parseInt(cmbAteAnual.getItemAt( i )) < anoAte  ) ){
                        anosCmb.add( Integer.parseInt(cmbAteAnual.getItemAt( i )) );
                    }
                }

                for (int i = 0; i < anosCmb.size(); i++) {

                    if( anosCmb.get(i) < Integer.parseInt( cmbDeAnual.getItemAt( cmbDeAnual.getSelectedIndex() ) )  ){
                        anosCmb.remove(i);
                    }
                }

                for (int i = 0; i < anosCmb.size(); i++) {                    
                    if( anosCmb.get(i) < Integer.parseInt( cmbDeAnual.getItemAt( cmbDeAnual.getSelectedIndex() ) )  ){
                        anosCmb.remove(i);
                    }
                }
                
                anosCmb.add( Integer.parseInt(cmbAteAnual.getItemAt( cmbAteAnual.getSelectedIndex() )) );
                // ArrayList<String> anosCmb2 = anosCmb; debug
                Collections.sort(anosCmb);
                //if( anosCmb != null ){
                    anosContaPagargraf = ContaPagarDAO.retornaAnos(anosCmb);
                    GraficoDeBarra graficoDeBarra = new GraficoDeBarra();
                    this.pnlGrafico1.removeAll();
                    this.pnlGrafico1.add( graficoDeBarra.criarGraficoAnualIntervalo( anosContaPagargraf ) );
                    this.pnlGrafico1.revalidate();
                    this.pnlGrafico1.repaint();
                    //}
            }

        }
    }//GEN-LAST:event_btnGerarGraficoActionPerformed

    private void rbAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAnoActionPerformed
        // RadioButton anos
        cmbAnoMes.setEnabled(false);
        cmbDeAnual.setEnabled(true);
        cmbDeMes.setEnabled(false);
        cmbAteMes.setEnabled(false);
        cmbAteAnual.setEnabled(true);
        lblAnoMes.setEnabled(false);
        lblAteAno.setEnabled(true);
        lblDeAno.setEnabled(true);
        
    }//GEN-LAST:event_rbAnoActionPerformed

    private void rbMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMesActionPerformed
        // RadioButton meses
        cmbAnoMes.setEnabled(true);
        lblAnoMes.setEnabled(true);
        lblAteAno.setEnabled(false);
        lblDeAno.setEnabled(false);
        cmbDeAnual.setEnabled(false);
        cmbAteAnual.setEnabled(false);
        cmbDeMes.setEnabled(false);
        cmbAteMes.setEnabled(false);
    }//GEN-LAST:event_rbMesActionPerformed

    private void cmbAteAnualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAteAnualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAteAnualActionPerformed

    private void btnExportarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnExportarMouseClicked
        // TODO add your handling code here:
        JPopupMenu menuPopUp = new JPopupMenu();
        JMenuItem itemExportarExcel = new JMenuItem();
        JMenuItem itemExportarPdf = new JMenuItem();
        itemExportarExcel.setText("Exportar para documento do Microsoft Word Excel");
        itemExportarPdf.setText("Gerar relat√≥rio em PDF");
        menuPopUp.add(itemExportarExcel);
        menuPopUp.add(itemExportarPdf);
        //menuPopUp.setBounds(evt.getX(), evt.getY(), 100, 100);
        //menuPopUp.setVisible(true);
        menuPopUp.show(btnExportar,evt.getX(),evt.getY());
        
        itemExportarExcel.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                
            }
        });
        
        itemExportarExcel.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                 // Gerar Excel
            ExportarExcel janelaExportarExcel = null;
            if( rbMes.isSelected() ){
                if( percentuais != null ){
                    janelaExportarExcel = new ExportarExcel(null,null,percentuais,null); 
                }else{
                    janelaExportarExcel = new ExportarExcel(mesesIntervalo,null,null,null); 
                }
                
            }else{
                janelaExportarExcel = new ExportarExcel(null,anosContaPagargraf,null,percentuaisAno); 
            }               
            janelaExportarExcel.setVisible(true);
            }
        });
        
        itemExportarPdf.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                 JanelaExportarPdf janExportarPdf = new JanelaExportarPdf();
                 janExportarPdf.setVisible(true);
            }
        });
    }//GEN-LAST:event_btnExportarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaDeEstatisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaDeEstatisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaDeEstatisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaDeEstatisticas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaDeEstatisticas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCres;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnGerarGrafico;
    private javax.swing.ButtonGroup btnGroupIntervalo;
    private javax.swing.JComboBox<String> cmbAnoMes;
    private javax.swing.JComboBox<String> cmbAteAnual;
    private javax.swing.JComboBox<String> cmbAteMes;
    private javax.swing.JComboBox<String> cmbDeAnual;
    private javax.swing.JComboBox<String> cmbDeMes;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler14;
    private javax.swing.Box.Filler filler15;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.Box.Filler filler5;
    private javax.swing.Box.Filler filler6;
    private javax.swing.Box.Filler filler7;
    private javax.swing.Box.Filler filler8;
    private javax.swing.Box.Filler filler9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JLabel lblAnoMes;
    private javax.swing.JLabel lblAteAno;
    private javax.swing.JLabel lblCrescimento;
    private javax.swing.JLabel lblDeAno;
    private javax.swing.JPanel pnlGrafico1;
    private javax.swing.JPanel pnlGrafico2;
    private javax.swing.JRadioButton rbAno;
    private javax.swing.JRadioButton rbMes;
    // End of variables declaration//GEN-END:variables
}
